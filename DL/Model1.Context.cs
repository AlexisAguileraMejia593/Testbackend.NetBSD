//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestbackendNetBSDEntities : DbContext
    {
        public TestbackendNetBSDEntities()
            : base("name=TestbackendNetBSDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categorias> Categorias { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<SubCategorias> SubCategorias { get; set; }
        public virtual DbSet<SubSubCategorias> SubSubCategorias { get; set; }
    
        public virtual ObjectResult<CategoriasGetAll_Result> CategoriasGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoriasGetAll_Result>("CategoriasGetAll");
        }
    
        public virtual int SubCategoriasAdd(string nombre, Nullable<int> idCategorias)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idCategoriasParameter = idCategorias.HasValue ?
                new ObjectParameter("IdCategorias", idCategorias) :
                new ObjectParameter("IdCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubCategoriasAdd", nombreParameter, idCategoriasParameter);
        }
    
        public virtual int SubCategoriasDelete(Nullable<int> idSubCategorias)
        {
            var idSubCategoriasParameter = idSubCategorias.HasValue ?
                new ObjectParameter("IdSubCategorias", idSubCategorias) :
                new ObjectParameter("IdSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubCategoriasDelete", idSubCategoriasParameter);
        }
    
        public virtual ObjectResult<SubCategoriasGetAll_Result> SubCategoriasGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubCategoriasGetAll_Result>("SubCategoriasGetAll");
        }
    
        public virtual ObjectResult<SubCategoriasGetById_Result> SubCategoriasGetById(Nullable<int> idSubCategorias)
        {
            var idSubCategoriasParameter = idSubCategorias.HasValue ?
                new ObjectParameter("IdSubCategorias", idSubCategorias) :
                new ObjectParameter("IdSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubCategoriasGetById_Result>("SubCategoriasGetById", idSubCategoriasParameter);
        }
    
        public virtual int SubCategoriasUpdate(Nullable<int> idSubCategorias, string nombre, Nullable<int> idCategorias)
        {
            var idSubCategoriasParameter = idSubCategorias.HasValue ?
                new ObjectParameter("IdSubCategorias", idSubCategorias) :
                new ObjectParameter("IdSubCategorias", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idCategoriasParameter = idCategorias.HasValue ?
                new ObjectParameter("IdCategorias", idCategorias) :
                new ObjectParameter("IdCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubCategoriasUpdate", idSubCategoriasParameter, nombreParameter, idCategoriasParameter);
        }
    
        public virtual int SubSubCategoriasAdd(string nombre, Nullable<int> idSubCategorias)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSubCategoriasParameter = idSubCategorias.HasValue ?
                new ObjectParameter("IdSubCategorias", idSubCategorias) :
                new ObjectParameter("IdSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubSubCategoriasAdd", nombreParameter, idSubCategoriasParameter);
        }
    
        public virtual int SubSubCategoriasDelete(Nullable<int> idSubSubCategorias)
        {
            var idSubSubCategoriasParameter = idSubSubCategorias.HasValue ?
                new ObjectParameter("IdSubSubCategorias", idSubSubCategorias) :
                new ObjectParameter("IdSubSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubSubCategoriasDelete", idSubSubCategoriasParameter);
        }
    
        public virtual ObjectResult<SubSubCategoriasGetAll_Result> SubSubCategoriasGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubSubCategoriasGetAll_Result>("SubSubCategoriasGetAll");
        }
    
        public virtual ObjectResult<SubSubCategoriasGetById_Result> SubSubCategoriasGetById(Nullable<int> idSubSubCategorias)
        {
            var idSubSubCategoriasParameter = idSubSubCategorias.HasValue ?
                new ObjectParameter("IdSubSubCategorias", idSubSubCategorias) :
                new ObjectParameter("IdSubSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubSubCategoriasGetById_Result>("SubSubCategoriasGetById", idSubSubCategoriasParameter);
        }
    
        public virtual int SubSubCategoriasUpdate(Nullable<int> idSubSubCategorias, string nombre, Nullable<int> idSubCategorias)
        {
            var idSubSubCategoriasParameter = idSubSubCategorias.HasValue ?
                new ObjectParameter("IdSubSubCategorias", idSubSubCategorias) :
                new ObjectParameter("IdSubSubCategorias", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSubCategoriasParameter = idSubCategorias.HasValue ?
                new ObjectParameter("IdSubCategorias", idSubCategorias) :
                new ObjectParameter("IdSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubSubCategoriasUpdate", idSubSubCategoriasParameter, nombreParameter, idSubCategoriasParameter);
        }
    
        public virtual int ProductosAdd(string nombre, string numeroMaterial, Nullable<int> idSubSubCategorias, Nullable<int> inventario)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var numeroMaterialParameter = numeroMaterial != null ?
                new ObjectParameter("NumeroMaterial", numeroMaterial) :
                new ObjectParameter("NumeroMaterial", typeof(string));
    
            var idSubSubCategoriasParameter = idSubSubCategorias.HasValue ?
                new ObjectParameter("IdSubSubCategorias", idSubSubCategorias) :
                new ObjectParameter("IdSubSubCategorias", typeof(int));
    
            var inventarioParameter = inventario.HasValue ?
                new ObjectParameter("Inventario", inventario) :
                new ObjectParameter("Inventario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductosAdd", nombreParameter, numeroMaterialParameter, idSubSubCategoriasParameter, inventarioParameter);
        }
    
        public virtual int ProductosDelete(Nullable<int> idProductos)
        {
            var idProductosParameter = idProductos.HasValue ?
                new ObjectParameter("IdProductos", idProductos) :
                new ObjectParameter("IdProductos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductosDelete", idProductosParameter);
        }
    
        public virtual ObjectResult<ProductosGetAll_Result> ProductosGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductosGetAll_Result>("ProductosGetAll");
        }
    
        public virtual ObjectResult<ProductosGetById_Result> ProductosGetById(Nullable<int> idProductos)
        {
            var idProductosParameter = idProductos.HasValue ?
                new ObjectParameter("IdProductos", idProductos) :
                new ObjectParameter("IdProductos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductosGetById_Result>("ProductosGetById", idProductosParameter);
        }
    
        public virtual int ProductosUpdate(Nullable<int> idProductos, string nombre, string numeroMaterial, Nullable<int> idSubSubCategorias, Nullable<int> inventario)
        {
            var idProductosParameter = idProductos.HasValue ?
                new ObjectParameter("IdProductos", idProductos) :
                new ObjectParameter("IdProductos", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var numeroMaterialParameter = numeroMaterial != null ?
                new ObjectParameter("NumeroMaterial", numeroMaterial) :
                new ObjectParameter("NumeroMaterial", typeof(string));
    
            var idSubSubCategoriasParameter = idSubSubCategorias.HasValue ?
                new ObjectParameter("IdSubSubCategorias", idSubSubCategorias) :
                new ObjectParameter("IdSubSubCategorias", typeof(int));
    
            var inventarioParameter = inventario.HasValue ?
                new ObjectParameter("Inventario", inventario) :
                new ObjectParameter("Inventario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductosUpdate", idProductosParameter, nombreParameter, numeroMaterialParameter, idSubSubCategoriasParameter, inventarioParameter);
        }
    
        public virtual ObjectResult<SubCategoriasGetByIdCategorias_Result> SubCategoriasGetByIdCategorias(Nullable<int> idCategorias)
        {
            var idCategoriasParameter = idCategorias.HasValue ?
                new ObjectParameter("IdCategorias", idCategorias) :
                new ObjectParameter("IdCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubCategoriasGetByIdCategorias_Result>("SubCategoriasGetByIdCategorias", idCategoriasParameter);
        }
    
        public virtual ObjectResult<SubSubCategoriasGetByIdSubCategorias_Result> SubSubCategoriasGetByIdSubCategorias(Nullable<int> idSubCategorias)
        {
            var idSubCategoriasParameter = idSubCategorias.HasValue ?
                new ObjectParameter("IdSubCategorias", idSubCategorias) :
                new ObjectParameter("IdSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubSubCategoriasGetByIdSubCategorias_Result>("SubSubCategoriasGetByIdSubCategorias", idSubCategoriasParameter);
        }
    
        public virtual ObjectResult<ProductosGetByIdSubSubCategorias_Result> ProductosGetByIdSubSubCategorias(Nullable<int> idSubSubCategorias)
        {
            var idSubSubCategoriasParameter = idSubSubCategorias.HasValue ?
                new ObjectParameter("IdSubSubCategorias", idSubSubCategorias) :
                new ObjectParameter("IdSubSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductosGetByIdSubSubCategorias_Result>("ProductosGetByIdSubSubCategorias", idSubSubCategoriasParameter);
        }
    }
}
